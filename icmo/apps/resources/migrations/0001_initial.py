# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2022-05-05 18:56
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('revenues', '0001_initial'),
        ('budgets', '0002_budgetlineitem_company'),
        ('companies', '0002_auto_20220505_2356'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GanttDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency_id', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('item_type', models.PositiveSmallIntegerField(choices=[(0, b'Finish-Finish'), (1, b'Finish-Start'), (2, b'Start-Finish'), (3, b'Start-Start')])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
            ],
        ),
        migrations.CreateModel(
            name='GanttTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('expanded', models.BooleanField(default=False)),
                ('percent_complete', models.SmallIntegerField(default=0)),
                ('summary', models.BooleanField(default=False)),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('past_due', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('budget_line_item', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='budgets.BudgetLineItem')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gantttask_last_modified', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='resources.GanttTask')),
                ('revenue_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='revenues.RevenuePlan')),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='revenues.Segment')),
            ],
            options={
                'ordering': ('order',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RadiantGanttTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('past_due', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('rq_id', models.CharField(max_length=255)),
                ('rq_sort_order', models.SmallIntegerField(blank=True, default=0)),
                ('rq_name', models.CharField(blank=True, max_length=512)),
                ('rq_start_time', models.DateTimeField(blank=True)),
                ('rq_end_time', models.DateTimeField(blank=True)),
                ('rq_effort', models.CharField(blank=True, max_length=255)),
                ('effort_in_seconds', models.IntegerField(blank=True, default=0)),
                ('rq_preferred_start_time', models.DateTimeField(blank=True, null=True)),
                ('rq_indent_level', models.SmallIntegerField(default=0)),
                ('rq_predecessor_indices', models.TextField(blank=True)),
                ('rq_progress_percent', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5)),
                ('rq_resources', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='radiantgantttask_last_modified', to=settings.AUTH_USER_MODEL)),
                ('revenue_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='revenues.RevenuePlan')),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='revenues.Segment')),
            ],
            options={
                'ordering': ('company_id', 'revenue_plan_id', 'rq_sort_order'),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SchedulerEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('is_all_day', models.BooleanField(default=False)),
                ('recurrence_exception', models.TextField(blank=True)),
                ('recurrence_rule', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('gantt_task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.GanttTask')),
                ('icmo_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.SchedulerEvent')),
                ('revenue_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='revenues.RevenuePlan')),
            ],
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('value', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('revenue_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='revenues.RevenuePlan')),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='revenues.Segment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.GanttTask')),
            ],
        ),
        migrations.AddField(
            model_name='ganttdependency',
            name='predecessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='successors', to='resources.GanttTask'),
        ),
        migrations.AddField(
            model_name='ganttdependency',
            name='revenue_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='revenues.RevenuePlan'),
        ),
        migrations.AddField(
            model_name='ganttdependency',
            name='segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='revenues.Segment'),
        ),
        migrations.AddField(
            model_name='ganttdependency',
            name='successor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predecessors', to='resources.GanttTask'),
        ),
        migrations.AlterUniqueTogether(
            name='gantttask',
            unique_together=set([('revenue_plan', 'slug')]),
        ),
    ]
