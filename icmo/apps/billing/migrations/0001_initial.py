# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2022-05-05 18:56
from __future__ import unicode_literals

from decimal import Decimal
import dirtyfields.dirtyfields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('account_number', models.CharField(editable=False, max_length=11, unique=True)),
                ('limit_max_companies', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'ordering': ('created',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BillingContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=[b'account', b'version', b'date'])),
                ('name', models.CharField(max_length=255, verbose_name=b'Print your name')),
                ('title', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('signature_json', models.TextField(blank=True)),
                ('signature_uri_b64', models.TextField(blank=True)),
                ('version', models.CharField(default=1, editable=False, max_length=255)),
                ('pdf_url', models.URLField(blank=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.BillingAccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_live', models.BooleanField(default=False, editable=False, verbose_name=b'live')),
                ('code', models.CharField(max_length=25)),
                ('short_description', models.CharField(max_length=100)),
                ('duration', models.CharField(choices=[(b'forever', b'Forever'), (b'once', b'Once'), (b'repeating', b'Repeating')], default=b'once', max_length=25)),
                ('amount_off', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('percent_off', models.PositiveIntegerField(blank=True, null=True)),
                ('currency', models.CharField(choices=[(b'USD', b'USD'), (b'CAD', b'CAD')], default=b'USD', max_length=3)),
                ('duration_in_months', models.PositiveSmallIntegerField(blank=True, help_text=b'If duration is repeating, the number of month this coupon applies.', null=True)),
                ('max_redemptions', models.PositiveIntegerField(blank=True, null=True)),
                ('times_redeemed', models.PositiveIntegerField(default=0, editable=False)),
                ('redeem_by', models.DateTimeField(blank=True, null=True)),
                ('setup_fee_amount_off', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('setup_fee_percent_off', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_live', models.BooleanField(default=False, editable=False, verbose_name=b'live')),
                ('provider_name', models.CharField(blank=True, choices=[(b'stripe', b'Stripe'), (b'paypal_rest', b'PayPal')], editable=False, max_length=30)),
                ('status', models.CharField(blank=True, choices=[(b'active', b'Active'), (b'trialing', b'Trialing'), (b'past_due', b'Past Due'), (b'canceled', b'Canceled'), (b'unpaid', b'Unpaid')], max_length=255)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='billing.BillingAccount')),
                ('coupon', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Coupon')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_live', models.BooleanField(default=False, editable=False, verbose_name=b'live')),
                ('name', models.CharField(max_length=100)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('short_description', models.CharField(max_length=200)),
                ('full_description', models.TextField()),
                ('statement_description', models.CharField(help_text=b'This will (may) appear on the bank statement, max 22 characters, cannot include <>"\' characters.', max_length=22)),
                ('limit_max_companies', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('currency', models.CharField(choices=[(b'USD', b'USD'), (b'CAD', b'CAD')], default=b'USD', max_length=3)),
                ('interval', models.CharField(choices=[(b'day', b'Day'), (b'week', b'Week'), (b'month', b'Month'), (b'year', b'Year')], default=b'month', max_length=10)),
                ('interval_count', models.PositiveSmallIntegerField(default=1, null=True, verbose_name=b'Intervals between charges')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, verbose_name=b'Amount (per period)')),
                ('amount_display_interval', models.PositiveSmallIntegerField(blank=True, help_text=b"If you want the pricing interval display to be different than the billing interval (for example show monthly pricing but bill quarterly), then set this to the number of intervals you'd like to display.", null=True)),
                ('free_trial_period_interval', models.CharField(blank=True, choices=[(b'day', b'Day'), (b'week', b'Week'), (b'month', b'Month'), (b'year', b'Year')], max_length=10, null=True)),
                ('free_trial_period_interval_duration', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('setup_fee_name', models.CharField(blank=True, max_length=100)),
                ('setup_fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=7)),
                ('setup_fee_description', models.CharField(blank=True, max_length=200)),
                ('minimum_duration_in_intervals', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('interval', 'amount'),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='billing.SubscriptionPlan'),
        ),
    ]
